//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grasews.UI.WebServiceSamples.Client.TemperatureConverterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperatureConverterService.TemperatureConverterSoap")]
    public interface TemperatureConverterSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertFahrenheitToCelsius", ReplyAction="*")]
        double ConvertFahrenheitToCelsius(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertFahrenheitToCelsius", ReplyAction="*")]
        System.Threading.Tasks.Task<double> ConvertFahrenheitToCelsiusAsync(double fahrenheit);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TemperatureConverterSoapChannel : Grasews.UI.WebServiceSamples.Client.TemperatureConverterService.TemperatureConverterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperatureConverterSoapClient : System.ServiceModel.ClientBase<Grasews.UI.WebServiceSamples.Client.TemperatureConverterService.TemperatureConverterSoap>, Grasews.UI.WebServiceSamples.Client.TemperatureConverterService.TemperatureConverterSoap {
        
        public TemperatureConverterSoapClient() {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureConverterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureConverterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ConvertFahrenheitToCelsius(double fahrenheit) {
            return base.Channel.ConvertFahrenheitToCelsius(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> ConvertFahrenheitToCelsiusAsync(double fahrenheit) {
            return base.Channel.ConvertFahrenheitToCelsiusAsync(fahrenheit);
        }
    }
}
